name: Pre-commit Checks PR

on:
  workflow_dispatch

jobs:
  content-update:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Cache Datastore
      uses: actions/cache@67b839edb68371cc5014f6cea11c9aa77238de78
      with:
        path: /home/runner/precommit-check-sha
        key: ${{ runner.os }}-precommit-check-sha
        restore-keys: ${{ runner.os }}-precommit-check-sha

    - name: Check Sha
      id: store
      run: |
        filename="/home/runner/precommit-check-sha"

        if [ ! -e "$filename" ]; then
            touch "$filename"
        fi

        cat "$filename"

        if grep -q -x "${{ github.sha }}" "$filename"; then
            echo "found=true" >> $GITHUB_OUTPUT
        else
            echo "found=false" >> $GITHUB_OUTPUT
            echo "${{ github.sha }}" >> "$filename"
        fi

        cat "$filename"

    - uses: hmarr/debug-action@a701ed95a46e6f2fb0df25e1a558c16356fae35a
    - uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5
      with:
        fetch-depth: 0 # fetch all history for all branches and tags

    - name: Check Branch
      id: branch
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config commit.gpgsign false

        branch=precommit/${{ github.sha }}
        echo "branch=$branch" >> $GITHUB_OUTPUT
        echo "base=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

        if git ls-remote --heads origin "$branch" | grep -q "refs/heads/$branch"; then
            echo "The checks ran on the current commit."
            echo "found=true" >> $GITHUB_OUTPUT
        else
            echo "found=false" >> $GITHUB_OUTPUT
        fi

    - name: Update Content
      if: steps.branch.outputs.found == 'false'
      id: content
      run: |
        git checkout -b ${{ steps.branch.outputs.branch }}
        echo "test" > testfile
        git add .
        git commit -m "chore: run pre-commit checks"
        git push --set-upstream origin ${{ steps.branch.outputs.branch }}

    - name: Create Pull Request
      if: steps.branch.outputs.found == 'false'
      uses: actions/github-script@6f00a0b667f9463337970371ccda9072ee86fb27
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { repo, owner } = context.repo;
          const q = 'is:pr is:open label:precommit repo:${{ github.repository }}';
          const res = await github.rest.search.issuesAndPullRequests({q});

          if (res.data.total_count > 0) {
            for (let x = 0; x < res.data.items.length; x++) {
              const item = res.data.items[x];
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: item.number,
                state: 'closed'
              });
            }
          }

          const result = await github.rest.pulls.create({
            owner,
            repo,
            head: '${{ steps.branch.outputs.branch }}',
            base: '${{ steps.branch.outputs.base }}',
            title: 'pre-commit changes'
          });

          github.rest.issues.addLabels({
            owner,
            repo,
            issue_number: result.data.number,
            labels: ['precommit', '${{ github.sha }}']
          });
