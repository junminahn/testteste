apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "..fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "..chart" . }}
spec:
  schedule: "*/1 * * * *"  
  jobTemplate:             
      spec:
        template:
          metadata:
            labels:          
              app.kubernetes.io/name: {{ include "..name" . }}
              app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          initContainers:
            - name: initdb
              image: postgres:11.6-alpine
              command: ["bash", "-c"]
              args:
                - |
                  echo starting;
                  set -euo pipefail;
                  psql -d $PGDATABASE_NAME -qtA --set ON_ERROR_STOP=1 <<EOF
                    select 'create database $PGDATABASE_NAME' where not exists (select from pg_database where datname = '$PGDATABASE_NAME');
                    create table if not exists public.active_sessions (
                        id serial not null,
                        keycloak_url varchar(1000),
                        realm varchar(1000),
                        session_count int,
                        created_at timestamp with time zone default current_timestamp,
                        primary key(id)
                    );
                  EOF
              env:
                - name: PGHOST
                  value: kc-cron-patroni
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE_NAME
                  value: kccron
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 12 }}
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env:
                # Passing release version is essential to trigger a new deploymnet when deploying with `helm upgrade --install` command
                - name: RELEASE_REVISION
                  value: "{{ .Release.Revision }}"
                - name: PGHOST
                  value: kc-cron-patroni
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE_NAME
                  value: kccron
                - name: KEYCLOAK_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-service-account
                      key: client-id
                  value: kccron
                - name: KEYCLOAK_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-service-account
                      key: client-secret
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
